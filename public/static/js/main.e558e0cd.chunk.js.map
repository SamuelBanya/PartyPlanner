{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","components/About.js","components/party/AddPartyForm.js","components/party/ChoosePartyDropdown.js","components/party/EditPartyForm.js","components/party/Party.js","components/item/AddItemForm.js","components/item/EditItemForm.js","components/item/Item.js","components/location/AddLocationForm.js","components/location/EditLocationForm.js","components/location/Location.js","components/party/Summary.js","components/App.js","index.js"],"names":["styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","textarea","Wrapper","Alert","span","Message","p","Error","children","Logo","h1","Nav","nav","NavBar","user","setUser","as","Link","to","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","username","setUsername","password","setPassword","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","errors","htmlFor","type","id","autoComplete","value","onChange","target","SignUpForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","map","section","Divider","hr","Login","showLogin","setShowLogin","About","AddPartyForm","onAddParty","name","start_time","end_time","createPartyFormData","setCreatePartyFormData","handleCreatePartyChange","response","newParty","ChoosePartyForm","parties","onChooseParty","partyOptionsArray","party","disabled","selected","EditPartyForm","onEditParty","onDeleteParty","chosenParty","useEffect","setEditPartyFormData","editPartyFormData","handleEditPartyChange","ChoosePartyDropdown","editedParty","Party","onFetchParties","data","showAdd","setShowAdd","showEdit","setShowEdit","AddItemForm","onAddItem","createItemFormData","setCreateItemFormData","newItem","swal","EditItemForm","itemOptions","itemId","setItemOptions","onChangeItemInfo","setItemId","onEditItem","onDeleteItem","item_name","editItemFormData","setEditItemFormData","itemMatch","find","item","chosenPartyItemsMatch","items","chosenItemIndex","indexOf","chosenItemId","partyId","editedItem","Item","AddLocationForm","onAddLocation","createLocationFormData","setCreateLocationFormData","newLocation","EditLocationForm","locationOptions","locationId","setLocationOptions","onChangeLocationInfo","setLocationId","onEditLocation","onDeleteLocation","location_name","editLocationFormData","setEditLocationFormData","locationMatch","location","chosenPartyLocationMatch","chosenLocationIndex","chosenLocationId","editedLocation","Location","Summary","partyResults","partyItems","usersArray","users","push","uniqueUsers","Set","partyUsers","App","context","React","createContext","useContext","setParties","setChosenParty","partyIndex","setPartyIndex","itemIndex","setItemIndex","handleFetchParties","fetchedParties","handleChooseParty","match","index","path","element","updatedPartiesArray","deletedParty","filter","tempArray","console","log","deletedItemId","splice","filteredItemOptions","deletedLocationId","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"+RAEYA,IAAOC,IAAG,iK,2CCAhBC,EAAS,CACbC,QAAS,CACP,SAAU,OACV,WAAY,SAEdC,UAAW,CACT,SAAU,WACV,WAAY,cAehB,I,cAAMC,EAAaL,IAAOM,OAAM,6KAS1BC,EAAaP,YAAOK,EAAPL,CAAkB,8HAS/BQ,EAAgBR,YAAOK,EAAPL,CAAkB,2KAUzBS,EAvCf,SAAgB,GAAoD,IAC9DC,EAD6D,IAAjDC,eAAO,MAAG,OAAM,MAAEC,aAAK,MAAG,UAAS,EAAKC,EAAK,iBAQ7D,MANgB,SAAZF,EACFD,EAAYH,EACS,YAAZI,IACTD,EAAYF,GAGP,cAACE,EAAS,aAACI,MAAOZ,EAAOU,IAAYC,GAC9C,ECdeE,EANGf,IAAOC,IAAG,mFCYbe,EAZDhB,IAAOiB,MAAK,0OCQXC,EARDlB,IAAOmB,MAAK,kICATnB,IAAOoB,SAAQ,2PCShC,I,MAAMC,EAAUrB,IAAOC,IAAG,4LAWpBqB,EAAQtB,IAAOuB,KAAI,kLAUnBC,EAAUxB,IAAOyB,EAAC,0CAITC,EAlCf,SAAe,GAAe,IAAbC,EAAQ,EAARA,SACf,OACE,eAACN,EAAO,WACN,cAACC,EAAK,gBACN,cAACE,EAAO,UAAEG,MAGhB,ECoCA,IAAMN,EAAUrB,IAAOC,IAAG,mHAOpB2B,EAAO5B,IAAO6B,GAAE,6MAahBC,EAAM9B,IAAO+B,IAAG,iGAOPC,EAnEf,SAAgB,GAAM,EAAJC,KAAkB,IAAZC,EAAO,EAAPA,QAStB,OACE,mCACE,eAAC,EAAO,WACN,cAACN,EAAI,UACH,iDAEF,eAACE,EAAG,WACF,cAAC,EAAM,CAACK,GAAIC,IAAMC,GAAG,IAAG,mBAGxB,cAAC,EAAM,CAACF,GAAIC,IAAMC,GAAG,WAAU,qBAG/B,cAAC,EAAM,CAACF,GAAIC,IAAMC,GAAG,SAAQ,mBAG7B,cAAC,EAAM,CAACF,GAAIC,IAAMC,GAAG,YAAW,sBAGhC,cAAC,EAAM,CAACF,GAAIC,IAAMC,GAAG,WAAU,8BAG/B,cAAC,EAAM,CAAC1B,QAAQ,UAAU2B,QA9BlC,WACEC,MAAM,UAAW,CAAEC,OAAQ,WAAYC,MAAK,SAACC,GACvCA,EAAEC,IACJT,EAAQ,KAEZ,GACF,EAwB6D,2BAO/D,ECkBeU,MA1Df,SAAmB,GAAc,IAAZC,EAAO,EAAPA,QACnB,EAAgCC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,KAC5B,EAAgCF,mBAAS,IAAG,mBAArCG,EAAQ,KAAEC,EAAW,KAC5B,EAA4BJ,mBAAS,IAAG,mBAAzBK,GAAF,KAAW,MACxB,EAAkCL,oBAAS,GAAM,mBAA1CM,EAAS,KAAEC,EAAY,KAuB9B,OACE,uBAAMC,SArBR,SAAsBC,GACpBA,EAAEC,iBACFH,GAAa,GAEbd,MAAM,SAAU,CACdC,OAAQ,OACRiB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEb,WAAUE,eAChCR,MAAK,SAACC,GACPW,GAAa,GACTX,EAAEC,GACJD,EAAEmB,OAAOpB,MAAK,SAACR,GAAI,OAAKY,EAAQZ,EAAK,IAErCS,EAAEmB,OAAOpB,MAAK,SAACqB,GAAG,OAAKX,EAAUW,EAAIC,OAAO,GAEhD,GACF,EAG+B,UAC3B,eAAC,EAAS,WACR,cAAC,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAAC,EAAK,CACJC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOrB,EACPsB,SAAU,SAACd,GAAC,OAAKP,EAAYO,EAAEe,OAAOF,MAAM,OAGhD,eAAC,EAAS,WACR,cAAC,EAAK,CAACJ,QAAQ,WAAU,sBACzB,cAAC,EAAK,CACJC,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,MAAOnB,EACPoB,SAAU,SAACd,GAAC,OAAKL,EAAYK,EAAEe,OAAOF,MAAM,OAGhD,cAAC,EAAS,UACR,cAAC,EAAM,CAACzD,QAAQ,OAAOC,MAAM,UAAUqD,KAAK,SAAQ,SACjDb,EAAY,aAAe,cAKtC,ECmBemB,I,MAAAA,EA3Ef,SAAoB,GAAc,IAAZ1B,EAAO,EAAPA,QACpB,EAAgCC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,KAC5B,EAAgCF,mBAAS,IAAG,mBAArCG,EAAQ,KAAEC,EAAW,KAC5B,EAAwDJ,mBAAS,IAAG,mBAA7D0B,EAAoB,KAAEC,EAAuB,KACpD,EAA4B3B,mBAAS,IAAG,mBAAjCiB,EAAM,KAAEZ,EAAS,KACxB,EAAkCL,oBAAS,GAAM,mBAA1CM,EAAS,KAAEC,EAAY,KA0B9B,OACE,uBAAMC,SAzBR,SAAsBC,GACpBA,EAAEC,iBACFL,EAAU,IACVE,GAAa,GACbd,MAAM,UAAW,CACfC,OAAQ,OACRiB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBb,WACAE,WACAyB,sBAAuBF,MAExB/B,MAAK,SAACC,GACPW,GAAa,GACTX,EAAEC,GACJD,EAAEmB,OAAOpB,MAAK,SAACR,GAAI,OAAKY,EAAQZ,EAAK,IAErCS,EAAEmB,OAAOpB,MAAK,SAACqB,GAAG,OAAKX,EAAUW,EAAIC,OAAO,GAEhD,GACF,EAG+B,UAC3B,eAAC,EAAS,WACR,cAAC,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAAC,EAAK,CACJC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOrB,EACPsB,SAAU,SAACd,GAAC,OAAKP,EAAYO,EAAEe,OAAOF,MAAM,OAGhD,eAAC,EAAS,WACR,cAAC,EAAK,CAACJ,QAAQ,WAAU,sBACzB,cAAC,EAAK,CACJC,KAAK,WACLC,GAAG,WACHE,MAAOnB,EACPoB,SAAU,SAACd,GAAC,OAAKL,EAAYK,EAAEe,OAAOF,MAAM,EAC5CD,aAAa,wBAGjB,eAAC,EAAS,WACR,cAAC,EAAK,CAACH,QAAQ,WAAU,mCACzB,cAAC,EAAK,CACJC,KAAK,WACLC,GAAG,wBACHE,MAAOI,EACPH,SAAU,SAACd,GAAC,OAAKkB,EAAwBlB,EAAEe,OAAOF,MAAM,EACxDD,aAAa,wBAGjB,cAAC,EAAS,UACR,cAAC,EAAM,CAACF,KAAK,SAAQ,SAAEb,EAAY,aAAe,cAEpD,cAAC,EAAS,UACPW,EAAOY,KAAI,SAACb,GAAG,OACd,cAAC,EAAK,UAAYA,GAANA,EAAkB,QAKxC,ECrCA,IAAMlC,EAAO5B,IAAO6B,GAAE,oIAOhBR,EAAUrB,IAAO4E,QAAO,yFAMxBC,GAAU7E,IAAO8E,GAAE,kGAMVC,GApDf,SAAe,GAAc,IAAZlC,EAAO,EAAPA,QACf,EAAkCC,oBAAS,GAAK,mBAAzCkC,EAAS,KAAEC,EAAY,KAE9B,OACE,eAAC,EAAO,WACN,cAAC,EAAI,4BACJD,EACC,qCACE,cAAC,EAAS,CAACnC,QAASA,IACpB,cAACgC,GAAO,IACR,4DAEE,cAAC,EAAM,CAACjE,MAAM,YAAY0B,QAAS,kBAAM2C,GAAa,EAAM,EAAC,2BAMjE,qCACE,cAAC,EAAU,CAACpC,QAASA,IACrB,cAACgC,GAAO,IACR,8DAEE,cAAC,EAAM,CAACjE,MAAM,YAAY0B,QAAS,kBAAM2C,GAAa,EAAK,EAAC,4BAQxE,ECMeC,OAzCf,SAAe,GACX,OADiB,EAAJjD,KAET,gCACI,4CACA,gLAGA,mDACA,+BACI,sGAGA,yFAGA,uHAGA,gFAGA,qGAIJ,+CACA,+BACI,6FAGA,kGAGA,sFAMhB,E,QCSekD,OAhDf,SAAsB,GAAiB,IAAfC,EAAU,EAAVA,WACpB,EAAsDtC,mBAAS,CAC3DuC,KAAM,GACNC,WAAY,GACZC,SAAU,KACZ,mBAJKC,EAAmB,KAAEC,EAAsB,KAM5CC,EAA0B,SAACnC,GAC7BkC,EAAuB,2BAAID,GAAmB,mBAAGjC,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QAC9E,EAgBA,OACI,gCACI,+CACA,uBAAMd,SAjBsB,SAACC,GACjCA,EAAEC,iBACFjB,MAAM,WAAY,CACdC,OAAQ,OACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAE,KAAQ4B,EAA0B,KAAG,WAAcA,EAAgC,WAAG,SAAYA,EAA8B,aAE1J/C,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACmD,GAAQ,OAAKR,EAAWQ,EAAS,GAC5C,EAKoD,UACxC,uBAAO5B,QAAQ,OAAM,4BACrB,uBACA,uBAAOK,SAAUqB,EAAyBzB,KAAK,OAAOC,GAAG,OAAOmB,KAAK,SACrE,uBACA,uBAAOrB,QAAQ,aAAY,kCAC3B,uBACA,uBAAOK,SAAUqB,EAA0BzB,KAAK,OAAOC,GAAG,aAAamB,KAAK,eAC5E,uBACA,uBAAOrB,QAAQ,WAAU,gCACzB,uBACA,uBAAOK,SAAUqB,EAAyBzB,KAAK,OAAOC,GAAG,WAAWmB,KAAK,aACzE,uBACA,uBAAOpB,KAAK,gBAK5B,ECtBe4B,OAxBf,SAAyB,GAA4B,IAA1BC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAC5BC,EAAoBF,EAAQnB,KAAI,SAAAsB,GAChC,OACI,wBAAuB7B,MAAO6B,EAAMZ,KAAK,SAAEY,EAAMZ,MAApCY,EAAM/B,GAE3B,IAGA,OACI,qCACI,gDACA,iCACI,uBAAOF,QAAQ,eAAc,6BAC7B,uBACA,yBAAQqB,KAAK,eAAenB,GAAG,eAAeG,SAAU0B,EAAc,UAClE,wBAAQG,UAAQ,EAACC,UAAQ,EAAC/B,OAAK,sCAC7B4B,KAEN,4BAIhB,ECuDeI,OA5Ef,SAAuB,GAAsE,IAApEN,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeM,EAAW,EAAXA,YAAaC,EAAa,EAAbA,cAAeC,EAAW,EAAXA,YACzEC,qBAAU,WACNC,EAAqB,CACjBpB,KAAMkB,EAAYlB,KAClBC,WAAYiB,EAAYjB,WACxBC,SAAUgB,EAAYhB,UAE9B,GAAG,CAACgB,IAEJ,MAAkDzD,mBAAS,CACvDuC,KAAMkB,EAAYlB,KAClBC,WAAYiB,EAAYjB,WACxBC,SAAUgB,EAAYhB,WACxB,mBAJKmB,EAAiB,KAAED,EAAoB,KAMxCE,EAAwB,SAACpD,GAC3BkD,EAAqB,2BAAIC,GAAiB,mBAAGnD,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QAC1E,EAiCA,OACI,gCACI,cAACwC,GAAmB,CAACd,QAASA,EAASC,cAAeA,IACtD,4CACA,iCACI,uBAAO/B,QAAQ,OAAM,4BACrB,uBACA,uBAAOK,SAAUsC,EAAuB1C,KAAK,OAAOC,GAAG,OAAOmB,KAAK,OAAOjB,MAAOsC,EAAkBrB,OACnG,uBACA,uBAAOrB,QAAQ,aAAY,kCAC3B,uBACA,uBAAOK,SAAUsC,EAAwB1C,KAAK,OAAOC,GAAG,aAAamB,KAAK,aAAajB,MAAOsC,EAAkBpB,aAChH,uBACA,uBAAOtB,QAAQ,WAAU,gCACzB,uBACA,uBAAOK,SAAUsC,EAAuB1C,KAAK,OAAOC,GAAG,WAAWmB,KAAK,WAAWjB,MAAOsC,EAAkBnB,WAC3G,uBACA,uBACA,uBAAOjD,QAjDA,SAACiB,GAChBA,EAAEC,iBAEF,IAAMU,EAAKqC,EAAYrC,GAEvB3B,MAAM,YAAD,OAAa2B,GAAM,CACpB1B,OAAQ,QACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAE,KAAQ8C,EAAwB,KAAG,WAAcA,EAA8B,WAAG,SAAYA,EAA4B,aAEpJjE,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACoE,GAAW,OAAKR,EAAYQ,EAAY,GACnD,EAkCwC5C,KAAK,SAASG,MAAM,SAChD,uBACA,uBAAO9B,QAlCE,SAACiB,GAClBA,EAAEC,iBACF,IAAMU,EAAKqC,EAAYrC,GAEvB3B,MAAM,YAAD,OAAa2B,GAAM,CACpB1B,OAAQ,WAEXC,MAAK,SAACkD,GACCA,EAAShD,IACT2D,EAAcC,EAEtB,GACJ,EAsB0CtC,KAAK,SAASG,MAAM,gBAIlE,EClBe0C,OAvDf,SAAe,GAAiG,IAA/FhB,EAAO,EAAPA,QAASiB,EAAc,EAAdA,eAAgB3B,EAAU,EAAVA,WAAYiB,EAAW,EAAXA,YAAaC,EAAa,EAAbA,cAAeP,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YAC7FC,qBAAU,WACNjE,MAAM,WAAY,CAClBC,OAAQ,MACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGbhB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACuE,GACHD,EAAeC,EACnB,GACJ,GAAG,IAEH,MAA8BlE,oBAAS,GAAM,mBAAtCmE,EAAO,KAAEC,EAAU,KAC1B,EAAgCpE,oBAAS,GAAM,mBAAxCqE,EAAQ,KAAEC,EAAW,KAU5B,OACI,gCACI,yCACA,wBAAQ9E,QAXhB,WACI4E,GAAYD,EAChB,EAS0C,yBAClC,uBACA,uBACA,wBAAQ3E,QAVhB,WACI8E,GAAaD,EACjB,EAQ2C,0BACnC,uBAEIF,GACA,cAAC,GAAY,CACT7B,WAAYA,IAIhB6B,GAAWE,GACX,uBAGAA,GACA,cAAC,GAAa,CACVd,YAAaA,EAAaC,cAAeA,EACzCR,QAASA,EAASC,cAAeA,EAAeQ,YAAaA,MAKjF,E,oBCVec,OA3Cf,SAAqB,GAAqD,IAAnDC,EAAS,EAATA,UAAWxB,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YACtD,EAAoDzD,mBAAS,CACzDuC,KAAM,KACR,mBAFKkC,EAAkB,KAAEC,EAAqB,KA0BhD,OACI,gCACI,cAACZ,GAAmB,CAACd,QAASA,EAASC,cAAeA,IACtD,8CACA,iCACI,uBAAO/B,QAAQ,OAAM,2BACrB,uBACA,uBAAOK,SA7BY,SAACd,GAC5BiE,EAAsB,2BAAID,GAAkB,mBAAGhE,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QAC5E,EA2BqDH,KAAK,OAAOC,GAAG,OAAOmB,KAAK,cACpE,uBACA,uBAAO/C,QA3BE,SAACiB,GAClBA,EAAEC,iBACF,IAAMU,EAAKqC,EAAYrC,GACvB3B,MAAM,YAAD,OAAa2B,EAAE,UAAU,CAC1B1B,OAAQ,OACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAE,KAAQ2D,EAA8B,UAAG,SAAYrD,MAE/EzB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACgF,GACHH,EAAUG,GACVC,KAAK,kBACT,GACJ,EAW0CzD,KAAK,gBAKnD,ECyCe0D,OAnFf,SAAsB,GAAsI,IAApIC,EAAW,EAAXA,YAA6BC,GAAF,EAAdC,eAAsB,EAAND,QAAmBE,GAAF,EAATC,UAA2B,EAAhBD,kBAAkBE,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAAcpC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YACxI,EAAgDzD,mBAAS,CACrDqF,UAAW,KACb,mBAFKC,EAAgB,KAAEC,EAAmB,KAwD5C,OACI,gCACI,cAACzB,GAAmB,CAACd,QAASA,EAASC,cAAeA,IACtD,2CACA,iCACI,uBAAO/B,QAAQ,cAAa,6BAC5B,uBACA,yBAAQqB,KAAK,cAAcnB,GAAG,cAAcG,SA3DxD,SAA0Bd,GACtB,IAII+E,EAJWV,EAAYW,MAAK,SAAAC,GAC5B,OAAOA,EAAK3H,MAAMuD,QAAUb,EAAEe,OAAOF,KACzC,IAEyBvD,MAAMuD,MAE/BiE,EAAoB,CAAC,UAAaC,IAElC,IAAIG,EAAwBlC,EAAYmC,MAAMH,MAAK,SAAAC,GAAI,OAAIA,EAAKnD,OAASiD,CAAS,IAE9EK,EAAkBpC,EAAYmC,MAAM/D,KAAI,SAAA6D,GAAI,OAAIA,EAAKnD,IAAI,IAAEuD,QAAQN,GAEnEO,EAAeJ,EAAsBvE,GACzC6D,EAAiBc,EAAcF,EACnC,EA4CmF,UACnE,wBAAQzC,UAAQ,EAACC,UAAQ,EAAC/B,OAAK,sCAC7BwD,KAEN,uBACA,uBACA,uBAAO5D,QAAQ,OAAM,2BACrB,uBACA,uBAAOK,SAlDU,SAACd,GAC1B8E,EAAoB,2BAAID,GAAgB,mBAAG7E,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QACxE,EAgDmDH,KAAK,OAAOC,GAAG,OAAOmB,KAAK,YAAYjB,MAAOgE,EAAiBD,YACtG,uBACA,uBACA,uBAAO7F,QAjDA,SAACiB,GAChBA,EAAEC,iBAEF,IAAMsF,EAAUvC,EAAYrC,GAE5B3B,MAAM,YAAD,OAAauG,EAAO,kBAAUjB,GAAU,CACzCrF,OAAQ,QACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAC,KAAQwE,EAA4B,UAAG,SAAYU,MAE5ErG,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACsG,GAAU,OAAKd,EAAWc,EAAW,GAChD,EAkCwC9E,KAAK,SAASG,MAAM,SAChD,uBACA,uBAAO9B,QAlCE,SAACiB,GAClBA,EAAEC,iBACF,IAAMsF,EAAUvC,EAAYrC,GAE5B3B,MAAM,YAAD,OAAauG,EAAO,kBAAUjB,GAAU,CACzCrF,OAAQ,WAEXC,MAAK,SAACkD,GACCA,EAAShD,IACTuF,EAAavC,EAAUkC,EAE/B,GACJ,EAsB0C5D,KAAK,SAASG,MAAM,gBAIlE,ECxBe4E,OAxDf,SAAc,GAAiK,IAA/J1B,EAAS,EAATA,UAAWM,EAAW,EAAXA,YAAaE,EAAc,EAAdA,eAAgBD,EAAM,EAANA,OAAQG,EAAS,EAATA,UAAWD,EAAgB,EAAhBA,iBAAkBE,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAAcpC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YAAaQ,EAAc,EAAdA,eACxJP,qBAAU,WACNjE,MAAM,WAAY,CAClBC,OAAQ,MACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGbhB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACuE,GACHD,EAAeC,EACnB,GACJ,GAAG,IAEH,MAA8BlE,oBAAS,GAAM,mBAAtCmE,EAAO,KAAEC,EAAU,KAC1B,EAAgCpE,oBAAS,GAAM,mBAAxCqE,EAAQ,KAAEC,EAAW,KAS5B,OACI,gCACI,uCACA,wBAAQ9E,QAVhB,WACI4E,GAAYD,EAChB,EAQwC,uBAChC,uBACA,uBACA,wBAAQ3E,QAThB,WACI8E,GAAaD,EACjB,EAOyC,wBACjC,uBAEIF,GACA,cAAC,GAAW,CACRK,UAAWA,EACXxB,QAASA,EAASC,cAAeA,EAAeQ,YAAaA,IAIjEU,GAAWE,GACX,uBAGAA,GACA,cAAC,GAAY,CACTS,YAAaA,EAAaE,eAAgBA,EAAgBD,OAAQA,EAAQG,UAAWA,EAAWD,iBAAkBA,EAClHE,WAAYA,EAAYC,aAAcA,EACtCpC,QAASA,EAASC,cAAeA,EAAeQ,YAAaA,MAKjF,ECde0C,OAzCf,SAAyB,GAAwD,IAAtDnD,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAemD,EAAa,EAAbA,cAAe3C,EAAW,EAAXA,YAC9D,EAA4DzD,mBAAS,CACjEuC,KAAM,KACR,mBAFK8D,EAAsB,KAAEC,EAAyB,KAuBxD,OACI,gCACI,cAACxC,GAAmB,CAACd,QAASA,EAASC,cAAeA,IACtD,8CACA,iCACI,uBAAO/B,QAAQ,OAAM,+BACrB,uBACA,uBAAOK,SA1BgB,SAACd,GAChC6F,EAA0B,2BAAID,GAAsB,mBAAG5F,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QACpF,EAwByDH,KAAK,OAAOC,GAAG,OAAOmB,KAAK,kBACxE,uBACA,uBAAO/C,QAxBE,SAACiB,GAClBA,EAAEC,iBACF,IAAMU,EAAKqC,EAAYrC,GACvB3B,MAAM,YAAD,OAAa2B,EAAE,aAAa,CAC7B1B,OAAQ,OACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAE,KAAQuF,EAAsC,cAAG,SAAYjF,MAEvFzB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAAC4G,GAAW,OAAKH,EAAcG,EAAY,GACrD,EAW0CpF,KAAK,gBAMnD,EC4CeqF,OAnFf,SAA0B,GAAkK,IAAhKC,EAAe,EAAfA,gBAAqCC,GAAF,EAAlBC,mBAA8B,EAAVD,YAA2BE,GAAF,EAAbC,cAAmC,EAApBD,sBAAsBE,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkB/D,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YACxK,EAAwDzD,mBAAS,CAC7DgH,cAAe,KACjB,mBAFKC,EAAoB,KAAEC,EAAuB,KAwDpD,OACI,gCACI,cAACpD,GAAmB,CAACd,QAASA,EAASC,cAAeA,IACtD,+CACA,iCACI,uBAAO/B,QAAQ,kBAAiB,kCAChC,uBACA,yBAAQqB,KAAK,kBAAkBnB,GAAG,kBAAkBG,SA3DhE,SAA8Bd,GAC1B,IAII0G,EAJWV,EAAgBhB,MAAK,SAAA2B,GAChC,OAAOA,EAASrJ,MAAMuD,QAAUb,EAAEe,OAAOF,KAC7C,IAE6BvD,MAAMuD,MAEnC4F,EAAwB,CAAC,cAAiBC,IAE1C,IAAIE,EAA2B5D,EAAY2D,SAAS3B,MAAK,SAAA2B,GAAQ,OAAIA,EAAS7E,OAAS4E,CAAa,IAEhGG,EAAsB7D,EAAY2D,SAASvF,KAAI,SAAAuF,GAAQ,OAAIA,EAAS7E,IAAI,IAAEuD,QAAQqB,GAElFI,EAAmBF,EAAyBjG,GAChDwF,EAAqBW,EAAkBD,EAC3C,EA4C+F,UAC/E,wBAAQlE,UAAQ,EAACC,UAAQ,EAAC/B,OAAK,yCAC7BmF,KAEN,uBACA,uBACA,uBAAOvF,QAAQ,OAAM,+BACrB,uBACA,uBAAOK,SAlDc,SAACd,GAC9ByG,EAAwB,2BAAID,GAAoB,mBAAGxG,EAAEe,OAAOe,KAAO9B,EAAEe,OAAOF,QAChF,EAgDuDH,KAAK,OAAOC,GAAG,OAAOmB,KAAK,gBAAgBjB,MAAO2F,EAAqBD,gBAClH,uBACA,uBACA,uBAAOxH,QAjDA,SAACiB,GAChBA,EAAEC,iBAEF,IAAMsF,EAAUvC,EAAYrC,GAE5B3B,MAAM,YAAD,OAAauG,EAAO,qBAAaU,GAAc,CAChDhH,OAAQ,QACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAC,KAAQmG,EAAoC,cAAG,SAAYjB,MAEpFrG,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAAC6H,GAAc,OAAKV,EAAeU,EAAe,GAC5D,EAkCwCrG,KAAK,SAASG,MAAM,SAChD,uBACA,uBAAO9B,QAlCE,SAACiB,GAClBA,EAAEC,iBACF,IAAMsF,EAAUvC,EAAYrC,GAE5B3B,MAAM,YAAD,OAAauG,EAAO,qBAAaU,GAAc,CAChDhH,OAAQ,WAEXC,MAAK,SAACkD,GACCA,EAAShD,IACTkH,EAAiBlE,EAAU6D,EAEnC,GACJ,EAsB0CvF,KAAK,SAASG,MAAM,gBAIlE,ECzBemG,OAvDf,SAAkB,GAA0G,IAAxGzE,EAAO,EAAPA,QAASiB,EAAc,EAAdA,eAAgBmC,EAAa,EAAbA,cAAeU,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkB9D,EAAa,EAAbA,cAAeQ,EAAW,EAAXA,YACzGC,qBAAU,WACNjE,MAAM,WAAY,CAClBC,OAAQ,MACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGbhB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACuE,GACHD,EAAeC,EACnB,GACJ,GAAG,IAEH,MAA8BlE,oBAAS,GAAM,mBAAtCmE,EAAO,KAAEC,EAAU,KAC1B,EAAgCpE,oBAAS,GAAM,mBAAxCqE,EAAQ,KAAEC,EAAW,KAU5B,OACI,gCACI,2CACA,wBAAQ9E,QAXhB,WACI4E,GAAYD,EAChB,EAS2C,0BACnC,uBACA,uBACA,wBAAQ3E,QAVhB,WACI8E,GAAaD,EACjB,EAQ4C,2BACpC,uBAEIF,GACA,cAAC,GAAe,CACZiC,cAAeA,IAInBjC,GAAWE,GACX,uBAGAA,GACA,cAAC,GAAgB,CACbyC,eAAgBA,EAAgBC,iBAAkBA,EAClD/D,QAASA,EAASC,cAAeA,EAAeQ,YAAaA,MAKjF,ECeeiE,OAtEf,SAAiB,GAA8B,IAA5B1E,EAAO,EAAPA,QAASiB,EAAc,EAAdA,eACxBP,qBAAU,WACNjE,MAAM,WAAY,CAClBC,OAAQ,MACRiB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGbhB,MAAK,SAACkD,GAAQ,OAAKA,EAAS9B,MAAM,IAClCpB,MAAK,SAACuE,GACHD,EAAeC,EACnB,GACJ,GAAG,IACH,IAAIyD,EAAe3E,EAAQnB,KAAI,SAACsB,GAC5B,IAAIyE,EAAazE,EAAMyC,MAAM/D,KAAI,SAAC6D,GAC9B,OACI,6BAAmBA,EAAKnD,MAAfmD,EAAKtE,GAEtB,IAEIyG,EAAa,GAEjB1E,EAAM2E,MAAMjG,KAAI,SAAC1C,GACb0I,EAAWE,KAAK5I,EACpB,IAEA,IAAI6I,EAAW,YAAO,IAAIC,IAAIJ,EAAWhG,KAAI,SAAC1C,GAAI,OAAKA,EAAKc,QAAQ,MAChEiI,EAAaF,EAAYnG,KAAI,SAAC1C,GAC9B,OACI,6BAAqCA,GAA5B6I,EAAYlC,QAAQ3G,GAErC,IAEA,OACI,mCACI,+BACI,6BAAKgE,EAAMZ,OACX,+BACI,4CACA,6BACKY,EAAMX,aAEX,4CACA,6BACKW,EAAMV,WAEX,yCACA,6BACKmF,IAEL,yCACA,6BACKM,WAMzB,IAEA,OACI,qCACI,yCACEP,IAId,ECgMeQ,I,GAAAA,GA5Pf,WAOE,IAAMC,EAAUC,IAAMC,cAAc,MAEpC,GADqBC,qBAAWH,GACQpI,mBAAS,OAAK,mBAGtD,GAHmB,KAAiB,KAGZA,mBAAS,OAAK,mBAA/Bb,EAAI,KAAEC,EAAO,KACpB,EAA8BY,mBAAS,IAAG,mBAAnCgD,EAAO,KAAEwF,EAAU,KAC1B,EAAsCxI,mBAAS,CAAC,GAAE,mBAA3CyD,EAAW,KAAEgF,EAAc,KAClC,EAAoCzI,mBAAS,IAAG,mBAAzC0I,EAAU,KAAEC,EAAa,KAChC,EAAsC3I,mBAAS,IAAG,mBAA3C8E,EAAW,KAAEE,EAAc,KAClC,EAA4BhF,mBAAS,IAAG,mBAAjC+E,EAAM,KAAEG,EAAS,KACxB,EAAkClF,mBAAS,IAAG,mBAAvC4I,EAAS,KAAEC,EAAY,KAC9B,EAA8C7I,mBAAS,IAAG,mBAC1D,GADsB,KAAoB,KACNA,mBAAS,KAAG,mBAChD,GADiB,KAAe,KACUA,mBAAS,KAAG,mBA4BtD,GA5BoB,KAAkB,KAEtC0D,qBAAU,WAERjE,MAAM,OAAOE,MAAK,SAACC,GACbA,EAAEC,IACJD,EAAEmB,OACDpB,MAAK,SAACR,GACLC,EAAQD,EACV,GAEN,GACA,GAAG,IAEHuE,qBAAU,WACR,GAAID,GACEA,EAAYmC,MAAO,CACrB,IAAId,EAAcrB,EAAYmC,MAAM/D,KAAI,SAAC6D,GACrC,OACI,wBAAsBpE,MAAOoE,EAAKnD,KAAK,SAAEmD,EAAKnD,MAAjCmD,EAAKtE,GAE1B,IAEA4D,EAAeF,EACjB,CAEJ,GAAG,CAACrB,KAECtE,EAAM,OAAO,cAAC,GAAK,CAACY,QAASX,IAElC,SAAS0J,EAAmBC,GAC1BP,EAAWO,EACb,CAqBA,SAASC,EAAkBvI,GACzB,IAAMwI,EAAQjG,EAAQyC,MAAK,SAAAC,GAAI,OAAIA,EAAKnD,MAAQ9B,EAAEe,OAAOF,KAAK,IAE9DmH,EAAeQ,GAEf,IAAIC,EAAQlG,EAAQnB,KAAI,SAAAsB,GAAK,OAAIA,EAAMZ,IAAI,IAAEuD,QAAQrF,EAAEe,OAAOF,OAE9DqH,EAAcO,EAChB,CAmIA,OACE,qCACE,cAAC,EAAM,CAAC/J,KAAMA,EAAMC,QAASA,IAC7B,eAAC,IAAM,WACL,cAAC,IAAK,CACJ+J,KAAK,IACLC,QAAS,cAAC,GAAK,CAACjK,KAAMA,MAExB,cAAC,IAAK,CACJgK,KAAK,WACLC,QAAS,cAAC,GAAK,CACbpG,QAASA,EAASiB,eAAgB6E,EAAoB7F,cAAe+F,EAAmBvF,YAAaA,EACrGnB,WA1KV,SAAwBQ,GACtB,IAAMuG,EAAmB,sBAAOrG,GAAO,CAAEF,IACzC0F,EAAWa,EACb,EAuKsC9F,YArKtC,SAAyBQ,GACvByE,GAAW,SAACxF,GAAO,OACjBA,EAAQnB,KAAI,SAACsB,GACX,OAAOA,EAAM/B,KAAO2C,EAAY3C,GAAK2C,EAAcZ,CACrD,GAAE,GAEN,EA+JoEK,cA7JpE,SAA2B8F,GACzBd,GAAW,SAACxF,GAAO,OACjBA,EAAQuG,QAAO,SAACpG,GAAK,OAAKA,EAAM/B,KAAOkI,EAAalI,EAAE,GAAC,GAE3D,MA4JM,cAAC,IAAK,CACJ+H,KAAK,SACLC,QAAS,cAAC,GAAI,CACZpG,QAASA,EAASC,cAAe+F,EAAmBvF,YAAaA,EAAaQ,eAAgB6E,EAC9FtE,UApJV,SAAuBG,GACrB3B,EAAQnB,KAAI,SAACsB,GACX,GAAIA,EAAM/B,IAAMqC,EAAYrC,GAAI,CAC9B,IAEI0D,EAFmB,sBAAO3B,EAAMyC,OAAK,CAAEjB,IAEP9C,KAAI,SAAC6D,GACrC,OACI,wBAAsBpE,MAAOoE,EAAKnD,KAAK,SAAEmD,EAAKnD,MAAjCmD,EAAKtE,GAE1B,IAEA4D,EAAeF,GACf,IAAI0E,EAAS,YAAOxG,GACpBwG,EAAUd,GAAY9C,MAAMmC,KAAKpD,GACjC6D,EAAWgB,EACb,MAEEC,QAAQC,IAAI,4CACb,GACL,EAiIoC5E,YAAaA,EAAaE,eAAgBA,EAAgBD,OAAQA,EAAQG,UAAWA,EAAWD,iBA/HpI,SAA8Bc,EAAcF,GAC1CX,EAAUa,GACV8C,EAAahD,EACf,EA6HUV,WA3HV,SAAwBc,GACtB,IAAIuD,EAAS,YAAOxG,GACpBwG,EAAUd,GAAY9C,MAAMgD,GAAa3C,EACzCuC,EAAWgB,GAEX,IAAI1E,EAAcrB,EAAYmC,MAAM/D,KAAI,SAAC6D,GACvC,OACI,wBAAsBpE,MAAOoE,EAAKnD,KAAK,SAAEmD,EAAKnD,MAAjCmD,EAAKtE,GAExB,IAEA4D,EAAeF,EACjB,EA+GsCM,aA7GtC,SAA0BvC,EAAU8G,GAClC,IAAIH,EAAS,YAAOxG,GACpBwG,EAAUd,GAAY9C,MAAMgE,OAAOhB,EAAW,GAC9CJ,EAAWgB,GAEX,IAAIK,EAAsBpG,EAAYmC,MAAM/D,KAAI,SAAC6D,GAC7C,OACI,wBAAsBpE,MAAOoE,EAAKnD,KAAK,SAAEmD,EAAKnD,MAAjCmD,EAAKtE,GAE1B,IAEA4D,EAAe6E,EACjB,MAoGM,cAAC,IAAK,CACJV,KAAK,YACLC,QAAS,cAAC,GAAQ,CAChBpG,QAASA,EAASiB,eAAgB6E,EAAoB7F,cAAe+F,EAAmBvF,YAAaA,EACrG2C,cArGV,SAA2BG,GACzBkD,QAAQC,IAAI,6DACZD,QAAQC,IAAI,6DACZD,QAAQC,IAAI,4DAmBd,EA+E4C5C,eArE5C,SAA4BU,GAC1BiC,QAAQC,IAAI,6DACZD,QAAQC,IAAI,8DACZD,QAAQC,IAAI,4DAYd,EAsDgF3C,iBApDhF,SAA8BlE,EAAUiH,GACtCL,QAAQC,IAAI,6DACZD,QAAQC,IAAI,gEACZD,QAAQC,IAAI,4DAYd,MAwCM,cAAC,IAAK,CACJP,KAAK,WACLC,QAAS,cAAC,GAAO,CAACpG,QAASA,EAASiB,eAAgB6E,WAK9D,EC9PMiB,GAAcC,YAAiB,8TAgBrCC,IAASC,OACP,eAAC,IAAa,WACZ,cAACH,GAAW,IACZ,cAAC,GAAG,OAENI,SAASC,eAAe,Q","file":"static/js/main.e558e0cd.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"blue\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"seashell\",\n    \"--accent\": \"orangered\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button } from \"../styles\";\n\nfunction NavBar({ user, setUser }) {\n  function handleLogoutClick() {\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <Logo>\n          <h1>Party Planner</h1>\n        </Logo>\n        <Nav>\n          <Button as={Link} to=\"/\">\n            About\n          </Button> \n          <Button as={Link} to=\"/parties\">\n            Parties\n          </Button>\n          <Button as={Link} to=\"/items\">\n            Items\n          </Button>\n          <Button as={Link} to=\"/location\">\n            Location\n          </Button>\n          <Button as={Link} to=\"/summary\">\n            View All Parties\n          </Button>\n          <Button variant=\"outline\" onClick={handleLogoutClick}>\n            Logout\n          </Button>\n        </Nav>\n      </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 2rem;\n  color: blue;\n  margin: 0;\n  line-height: 1;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  left: 20px;\n`;\n\nexport default NavBar;","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n        // {/* {errors ? errors.map((err) => ( <Error key={err}>{err}</Error> )) : null} </FormField> */}\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    // fetch(\"/api/login\", {\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { Button } from \"../styles\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Wrapper>\n      <Logo>Party Planner</Logo>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Don't have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </Button>\n          </p>\n        </>\n      ) : (\n        <>\n          <SignUpForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Already have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\n              Log In\n            </Button>\n          </p>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: blue;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Login;\n","import React from \"react\";\r\n\r\nfunction About({ user }) {\r\n    return (\r\n        <div>\r\n            <h2>About Page</h2>\r\n            <p>\r\n                This app is a Full Stack web application made with React, Ruby On Rails, and PostgresSQL that allows a user to plan a party with their friends!\r\n            </p>\r\n            <h2>Current Functions</h2>\r\n            <ul>\r\n                <li>\r\n                    Login page where a user can create an account, and login to the site\r\n                </li>\r\n                <li>\r\n                    The ability to create a party with a start and end time\r\n                </li>\r\n                <li>\r\n                    The ability to add new items to an existing party as well as edit or delete the items\r\n                </li>\r\n                <li>\r\n                    The ability to create, edit, and delete a item\r\n                </li>\r\n                <li>\r\n                    The ability to display a summary page to view all users' parties\r\n                </li>\r\n            </ul>\r\n            <h2>Roadmap Items</h2>\r\n            <ul>\r\n                <li>\r\n                    Timestamp selection to easily pick timestamp for each party   \r\n                </li>\r\n                <li>\r\n                    Ability to utilize a map library from NPM for the 'Summary' page\r\n                </li>\r\n                <li>\r\n                    Use of MaterialUI throughout the project itself \r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { useState } from \"react\";\r\n\r\nfunction AddPartyForm({ onAddParty }) {\r\n    const [createPartyFormData, setCreatePartyFormData] = useState({\r\n        name: \"\",\r\n        start_time: \"\",\r\n        end_time: \"\"\r\n    });\r\n\r\n    const handleCreatePartyChange = (e) => {\r\n        setCreatePartyFormData({...createPartyFormData, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    const handleCreatePartyFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch(\"/parties\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ \"name\": createPartyFormData[\"name\"], \"start_time\": createPartyFormData[\"start_time\"], \"end_time\": createPartyFormData[\"end_time\"] }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((newParty) => onAddParty(newParty));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add New Party</h2>\r\n            <form onSubmit={handleCreatePartyFormSubmit}>\r\n                <label htmlFor=\"name\">Name of Party:</label>\r\n                <br />\r\n                <input onChange={handleCreatePartyChange} type=\"text\" id=\"name\" name=\"name\"/>\r\n                <br />\r\n                <label htmlFor=\"start_time\">Start Time of Party:</label>\r\n                <br />\r\n                <input onChange={handleCreatePartyChange}  type=\"text\" id=\"start_time\" name=\"start_time\"/>\r\n                <br />\r\n                <label htmlFor=\"end_time\">End Time of Party:</label>\r\n                <br />\r\n                <input onChange={handleCreatePartyChange} type=\"text\" id=\"end_time\" name=\"end_time\"/>\r\n                <br />\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddPartyForm;","import React from \"react\";\r\n\r\nfunction ChoosePartyForm({ parties, onChooseParty}) {\r\n    let partyOptionsArray = parties.map(party => {\r\n        return (\r\n            <option key={party.id} value={party.name}>{party.name}</option>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Choose Party: </h2>\r\n            <form>\r\n                <label htmlFor=\"choose_party\">Choose a Party:</label>\r\n                <br />\r\n                <select name=\"choose_party\" id=\"choose_party\" onChange={onChooseParty}>\r\n                    <option disabled selected value> -- Select a party -- </option>\r\n                    { partyOptionsArray }\r\n                </select>\r\n                <br />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePartyForm;","import React, { useEffect, useState } from \"react\";\r\nimport ChoosePartyDropdown from \"../party/ChoosePartyDropdown\";\r\n\r\nfunction EditPartyForm({ parties, onChooseParty, onEditParty, onDeleteParty, chosenParty }) {\r\n    useEffect(() => {\r\n        setEditPartyFormData({\r\n            name: chosenParty.name,\r\n            start_time: chosenParty.start_time,\r\n            end_time: chosenParty.end_time\r\n        })\r\n    }, [chosenParty]);\r\n\r\n    const [editPartyFormData, setEditPartyFormData] = useState({\r\n        name: chosenParty.name,\r\n        start_time: chosenParty.start_time,\r\n        end_time: chosenParty.end_time\r\n    });\r\n\r\n    const handleEditPartyChange = (e) => {\r\n        setEditPartyFormData({...editPartyFormData, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const id = chosenParty.id;\r\n\r\n        fetch(`/parties/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ \"name\": editPartyFormData[\"name\"], \"start_time\": editPartyFormData[\"start_time\"], \"end_time\": editPartyFormData[\"end_time\"] }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((editedParty) => onEditParty(editedParty));\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        const id = chosenParty.id;\r\n\r\n        fetch(`/parties/${id}`, {\r\n            method: \"DELETE\",\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                onDeleteParty(chosenParty);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChoosePartyDropdown parties={parties} onChooseParty={onChooseParty} />\r\n            <h2>Edit Party</h2>\r\n            <form>\r\n                <label htmlFor=\"name\">Name of Party:</label>\r\n                <br />\r\n                <input onChange={handleEditPartyChange} type=\"text\" id=\"name\" name=\"name\" value={editPartyFormData.name}/>\r\n                <br />\r\n                <label htmlFor=\"start_time\">Start Time of Party:</label>\r\n                <br />\r\n                <input onChange={handleEditPartyChange}  type=\"text\" id=\"start_time\" name=\"start_time\" value={editPartyFormData.start_time}/>\r\n                <br />\r\n                <label htmlFor=\"end_time\">End Time of Party:</label>\r\n                <br />\r\n                <input onChange={handleEditPartyChange} type=\"text\" id=\"end_time\" name=\"end_time\" value={editPartyFormData.end_time}/>\r\n                <br />\r\n                <br />\r\n                <input onClick={handleEdit} type=\"submit\" value=\"Edit\" />\r\n                <br />\r\n                <input onClick={handleDelete} type=\"submit\" value=\"Delete\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPartyForm;","import React, { useState, useEffect } from \"react\";\r\nimport AddPartyForm from \"./AddPartyForm\";\r\nimport EditPartyForm from \"./EditPartyForm\";\r\n\r\nfunction Party({ parties, onFetchParties, onAddParty, onEditParty, onDeleteParty, onChooseParty, chosenParty}) {\r\n    useEffect(() => {\r\n        fetch(\"/parties\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            onFetchParties(data);\r\n        });\r\n    }, []);\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    function toggleAddParties() {\r\n        setShowAdd(!showAdd);\r\n    }\r\n\r\n    function toggleEditParties() {\r\n        setShowEdit(!showEdit);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Parties</h1>\r\n            <button onClick={toggleAddParties}>Add Parties</button>\r\n            <br />\r\n            <br />\r\n            <button onClick={toggleEditParties}>Edit Parties</button>\r\n            <br />\r\n            { \r\n                showAdd  &&\r\n                <AddPartyForm \r\n                    onAddParty={onAddParty} \r\n                />\r\n            }\r\n            {   \r\n                showAdd && showEdit &&\r\n                <hr/>\r\n            }\r\n            {   \r\n                showEdit &&\r\n                <EditPartyForm \r\n                    onEditParty={onEditParty} onDeleteParty={onDeleteParty} \r\n                    parties={parties} onChooseParty={onChooseParty} chosenParty={chosenParty} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Party;","import React, { useState } from \"react\";\r\nimport ChoosePartyDropdown from \"../party/ChoosePartyDropdown\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction AddItemForm({ onAddItem, parties, onChooseParty, chosenParty }) {\r\n    const [createItemFormData, setCreateItemFormData] = useState({\r\n        name: \"\",\r\n    });\r\n\r\n    const handleCreateItemChange = (e) => {\r\n        setCreateItemFormData({...createItemFormData, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n        const id = chosenParty.id;\r\n        fetch(`/parties/${id}/items`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ \"name\": createItemFormData[\"item_name\"], \"party_id\": id}),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((newItem) => { \r\n            onAddItem(newItem)\r\n            swal(\"New item added!\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChoosePartyDropdown parties={parties} onChooseParty={onChooseParty} />\r\n            <h2>Add New Item</h2>\r\n            <form>\r\n                <label htmlFor=\"name\">Name of Item:</label>\r\n                <br />\r\n                <input onChange={handleCreateItemChange} type=\"text\" id=\"name\" name=\"item_name\"/>\r\n                <br />\r\n                <input onClick={handleCreate} type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddItemForm;","import React, { useState, useEffect } from \"react\";\r\nimport ChoosePartyDropdown from \"../party/ChoosePartyDropdown\";\r\n\r\nfunction EditItemForm({ itemOptions, setItemOptions, itemId, setItemId, onChangeItemInfo, onEditItem, onDeleteItem, parties, onChooseParty, chosenParty }) {\r\n    const [editItemFormData, setEditItemFormData] = useState({\r\n        item_name: \"\"\r\n    });\r\n\r\n    function handleChooseItem(e) {\r\n        let mapMatch = itemOptions.find(item => {\r\n            return item.props.value === e.target.value\r\n        });\r\n\r\n        let itemMatch = mapMatch.props.value;\r\n\r\n        setEditItemFormData({\"item_name\": itemMatch});\r\n\r\n        let chosenPartyItemsMatch = chosenParty.items.find(item => item.name === itemMatch);\r\n\r\n        let chosenItemIndex = chosenParty.items.map(item => item.name).indexOf(itemMatch);\r\n\r\n        let chosenItemId = chosenPartyItemsMatch.id;\r\n        onChangeItemInfo(chosenItemId, chosenItemIndex);\r\n    }\r\n\r\n    const handleEditItemChange = (e) => {\r\n        setEditItemFormData({...editItemFormData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const partyId = chosenParty.id;\r\n\r\n        fetch(`/parties/${partyId}/items/${itemId}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\"name\": editItemFormData[\"item_name\"], \"party_id\": partyId}),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((editedItem) => onEditItem(editedItem))\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        const partyId = chosenParty.id;\r\n\r\n        fetch(`/parties/${partyId}/items/${itemId}`, {\r\n            method: \"DELETE\",\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                onDeleteItem(response, itemId);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChoosePartyDropdown parties={parties} onChooseParty={onChooseParty} />\r\n            <h2>Edit Item</h2>\r\n            <form>\r\n                <label htmlFor=\"item_select\">Choose an Item:</label>\r\n                <br />\r\n                <select name=\"item_select\" id=\"item_select\" onChange={handleChooseItem}>\r\n                    <option disabled selected value> -- Select an item -- </option>\r\n                    { itemOptions }\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"name\">Name of Item:</label>\r\n                <br />\r\n                <input onChange={handleEditItemChange} type=\"text\" id=\"name\" name=\"item_name\" value={editItemFormData.item_name}/>\r\n                <br />\r\n                <br />\r\n                <input onClick={handleEdit} type=\"submit\" value=\"Edit\" />\r\n                <br />\r\n                <input onClick={handleDelete} type=\"submit\" value=\"Delete\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditItemForm;","import React, { useState, useEffect } from \"react\";\r\nimport AddItemForm from \"./AddItemForm\";\r\nimport EditItemForm from \"./EditItemForm\";\r\n\r\nfunction Item({ onAddItem, itemOptions, setItemOptions, itemId, setItemId, onChangeItemInfo, onEditItem, onDeleteItem, parties, onChooseParty, chosenParty, onFetchParties }) {\r\n    useEffect(() => {\r\n        fetch(\"/parties\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            onFetchParties(data);\r\n        });\r\n    }, []);\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    function toggleAddItems() {\r\n        setShowAdd(!showAdd);\r\n    }\r\n\r\n    function toggleEditItems() {\r\n        setShowEdit(!showEdit);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Items</h1>\r\n            <button onClick={toggleAddItems}>Add Items</button>\r\n            <br />\r\n            <br />\r\n            <button onClick={toggleEditItems}>Edit Items</button>\r\n            <br />\r\n            {   \r\n                showAdd &&\r\n                <AddItemForm \r\n                    onAddItem={onAddItem} \r\n                    parties={parties} onChooseParty={onChooseParty} chosenParty={chosenParty}\r\n                />\r\n            }\r\n            {   \r\n                showAdd && showEdit &&\r\n                <hr/>\r\n            }\r\n            {\r\n                showEdit&&\r\n                <EditItemForm \r\n                    itemOptions={itemOptions} setItemOptions={setItemOptions} itemId={itemId} setItemId={setItemId} onChangeItemInfo={onChangeItemInfo}\r\n                    onEditItem={onEditItem} onDeleteItem={onDeleteItem} \r\n                    parties={parties} onChooseParty={onChooseParty} chosenParty={chosenParty}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, { useState } from \"react\";\r\nimport ChoosePartyDropdown from \"../party/ChoosePartyDropdown\";\r\n\r\nfunction AddLocationForm({ parties, onChooseParty, onAddLocation, chosenParty}) {\r\n    const [createLocationFormData, setCreateLocationFormData] = useState({\r\n        name: \"\",\r\n    });\r\n\r\n    const handleCreateLocationChange = (e) => {\r\n        setCreateLocationFormData({...createLocationFormData, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n        const id = chosenParty.id;\r\n        fetch(`/parties/${id}/location`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ \"name\": createLocationFormData[\"location_name\"], \"party_id\": id}),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((newLocation) => onAddLocation(newLocation));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChoosePartyDropdown parties={parties} onChooseParty={onChooseParty} />\r\n            <h2>Add Location</h2>\r\n            <form>\r\n                <label htmlFor=\"name\">Name of Location:</label>\r\n                <br />\r\n                <input onChange={handleCreateLocationChange} type=\"text\" id=\"name\" name=\"location_name\"/>\r\n                <br />\r\n                <input onClick={handleCreate} type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AddLocationForm;","import React, { useEffect, useState } from \"react\";\r\nimport ChoosePartyDropdown from \"../party/ChoosePartyDropdown\";\r\n\r\nfunction EditLocationForm({ locationOptions, setLocationOptions, locationId, setLocationId, onChangeLocationInfo, onEditLocation, onDeleteLocation, parties, onChooseParty, chosenParty }) {\r\n    const [editLocationFormData, setEditLocationFormData] = useState({\r\n        location_name: \"\"\r\n    });\r\n\r\n    function handleChooseLocation(e) {\r\n        let mapMatch = locationOptions.find(location => {\r\n            return location.props.value === e.target.value\r\n        });\r\n\r\n        let locationMatch = mapMatch.props.value;\r\n\r\n        setEditLocationFormData({\"location_name\": locationMatch});\r\n\r\n        let chosenPartyLocationMatch = chosenParty.location.find(location => location.name === locationMatch);\r\n\r\n        let chosenLocationIndex = chosenParty.location.map(location => location.name).indexOf(locationMatch);\r\n\r\n        let chosenLocationId = chosenPartyLocationMatch.id;\r\n        onChangeLocationInfo(chosenLocationId, chosenLocationIndex);\r\n    }\r\n\r\n    const handleEditLocationChange = (e) => {\r\n        setEditLocationFormData({...editLocationFormData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const partyId = chosenParty.id;\r\n\r\n        fetch(`/parties/${partyId}/location/${locationId}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\"name\": editLocationFormData[\"location_name\"], \"party_id\": partyId}),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((editedLocation) => onEditLocation(editedLocation))\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        const partyId = chosenParty.id;\r\n\r\n        fetch(`/parties/${partyId}/location/${locationId}`, {\r\n            method: \"DELETE\",\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                onDeleteLocation(response, locationId);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChoosePartyDropdown parties={parties} onChooseParty={onChooseParty} />\r\n            <h2>Edit Location</h2>\r\n            <form>\r\n                <label htmlFor=\"location_select\">Choose the Location:</label>\r\n                <br />\r\n                <select name=\"location_select\" id=\"location_select\" onChange={handleChooseLocation}>\r\n                    <option disabled selected value> -- Select a location -- </option>\r\n                    { locationOptions }\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"name\">Name of Location:</label>\r\n                <br />\r\n                <input onChange={handleEditLocationChange} type=\"text\" id=\"name\" name=\"location_name\" value={editLocationFormData.location_name}/>\r\n                <br />\r\n                <br />\r\n                <input onClick={handleEdit} type=\"submit\" value=\"Edit\" />\r\n                <br />\r\n                <input onClick={handleDelete} type=\"submit\" value=\"Delete\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditLocationForm;","import React, {useEffect, useState } from \"react\";\r\nimport AddLocationForm from \"./AddLocationForm\";\r\nimport EditLocationForm from \"./EditLocationForm\";\r\n\r\nfunction Location({ parties, onFetchParties, onAddLocation, onEditLocation, onDeleteLocation, onChooseParty, chosenParty}) {\r\n    useEffect(() => {\r\n        fetch(\"/parties\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            onFetchParties(data);\r\n        });\r\n    }, []);\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    function toggleAddLocation() {\r\n        setShowAdd(!showAdd);\r\n    }\r\n\r\n    function toggleEditLocation() {\r\n        setShowEdit(!showEdit);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Locations</h1>\r\n            <button onClick={toggleAddLocation}>Add Location</button>\r\n            <br />\r\n            <br />\r\n            <button onClick={toggleEditLocation}>Edit Location</button>\r\n            <br />\r\n            { \r\n                showAdd  &&\r\n                <AddLocationForm \r\n                    onAddLocation={onAddLocation} \r\n                />\r\n            }\r\n            {   \r\n                showAdd && showEdit &&\r\n                <hr/>\r\n            }\r\n            {   \r\n                showEdit &&\r\n                <EditLocationForm \r\n                    onEditLocation={onEditLocation} onDeleteLocation={onDeleteLocation} \r\n                    parties={parties} onChooseParty={onChooseParty} chosenParty={chosenParty} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location;","import React, { useEffect } from \"react\"\r\n\r\nfunction Summary({ parties, onFetchParties }) {\r\n    useEffect(() => {\r\n        fetch(\"/parties\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            onFetchParties(data);\r\n        });\r\n    }, []);\r\n    let partyResults = parties.map((party) => {\r\n        let partyItems = party.items.map((item) => {\r\n            return (\r\n                <li key={item.id}>{item.name}</li>\r\n            )\r\n        })\r\n\r\n        let usersArray = [];\r\n\r\n        party.users.map((user) => {\r\n            usersArray.push(user);\r\n        })\r\n\r\n        let uniqueUsers = [...new Set(usersArray.map((user) => user.username ))]  ;\r\n        let partyUsers = uniqueUsers.map((user) => {\r\n            return (\r\n                <li key={uniqueUsers.indexOf(user)}>{user}</li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <ul>\r\n                    <li>{party.name}</li>\r\n                    <ul>\r\n                        <li>Start Time</li>\r\n                        <ul>\r\n                            {party.start_time}\r\n                        </ul>\r\n                        <li>End Time: </li>\r\n                        <ul>\r\n                            {party.end_time}\r\n                        </ul>\r\n                        <li>Items: </li>\r\n                        <ul>\r\n                            {partyItems}\r\n                        </ul>\r\n                        <li>Users: </li>\r\n                        <ul>\r\n                            {partyUsers}\r\n                        </ul>\r\n                    </ul>\r\n                </ul>\r\n            </>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h1>Summary</h1>\r\n            { partyResults }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Summary;","import React, { useEffect, useState, useContext } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport About from \"./About\";\nimport Party from \"./party/Party\";\nimport Item from \"./item/Item\";\nimport Location from \"./location/Location\";\nimport Summary from \"./party/Summary\";\n\nfunction App() {\n  // TODO:\n  // Adding 'useContext' for 'NavBar' component:\n  // 'useContext' Docs Page:\n  // https://beta.reactjs.org/apis/react/useContext\n  // Example to possibly use to change themes of the 'NavBar' component:\n  // https://codesandbox.io/s/react-usecontext-rydy5?file=/src/App.js\n  const context = React.createContext(null);\n  const myContextVal = useContext(context);\n  const [contextState, setContextState] = useState(null);\n\n  // Rest of variables:\n  const [user, setUser] = useState(null);\n  const [parties, setParties] = useState([]);\n  const [chosenParty, setChosenParty] = useState({});\n  const [partyIndex, setPartyIndex] = useState(\"\");\n  const [itemOptions, setItemOptions] = useState([]);\n  const [itemId, setItemId] = useState(\"\");\n  const [itemIndex, setItemIndex] = useState(\"\");\n  const [locationOptions, setLocationOptions] = useState([]);\n  const [locationId, setLocationId] = useState(\"\");\n  const [locationIndex, setLocationIndex] = useState(\"\");\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((user) => {\n          setUser(user);\n        })\n    }\n  });\n  }, []);\n\n  useEffect(() => {\n    if (chosenParty) {\n      if (chosenParty.items) {\n        let itemOptions = chosenParty.items.map((item) => {\n            return (\n                <option key={item.id} value={item.name}>{item.name}</option>\n            )\n        });\n\n        setItemOptions(itemOptions);\n      }\n    }\n  }, [chosenParty]);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  function handleFetchParties(fetchedParties) {\n    setParties(fetchedParties)\n  }\n\n  function handleAddParty(newParty) {\n    const updatedPartiesArray = [...parties, newParty];\n    setParties(updatedPartiesArray);\n  }\n\n  function handleEditParty(editedParty) {\n    setParties((parties) => \n      parties.map((party) => {\n        return party.id === editedParty.id ? editedParty : party;\n      })\n    );\n  }\n\n  function handleDeleteParty(deletedParty) {\n    setParties((parties) =>\n      parties.filter((party) => party.id !== deletedParty.id)\n    );\n  }\n\n  function handleChooseParty(e) {\n    const match = parties.find(item => item.name == e.target.value);\n\n    setChosenParty(match);\n\n    let index = parties.map(party => party.name).indexOf(e.target.value)\n\n    setPartyIndex(index);\n  }\n\n  function handleAddItem(newItem) {\n    parties.map((party) => {\n      if (party.id == chosenParty.id) {\n        const updatedItemsArray = [...party.items, newItem];\n\n        let itemOptions = updatedItemsArray.map((item) => {\n            return (\n                <option key={item.id} value={item.name}>{item.name}</option>\n            )\n        });\n\n        setItemOptions(itemOptions);\n        let tempArray = [...parties];\n        tempArray[partyIndex].items.push(newItem);\n        setParties(tempArray) ;\n      } \n      else {\n        console.log(\"Match not found within 'handleAddNewItem!\");\n      }});\n  }\n\n  function handleChangeItemInfo(chosenItemId, chosenItemIndex) {\n    setItemId(chosenItemId);\n    setItemIndex(chosenItemIndex);\n  }\n\n  function handleEditItem(editedItem) {\n    let tempArray = [...parties];\n    tempArray[partyIndex].items[itemIndex] = editedItem;\n    setParties(tempArray);\n\n    let itemOptions = chosenParty.items.map((item) => {\n      return (\n          <option key={item.id} value={item.name}>{item.name}</option>\n      )\n    });\n\n    setItemOptions(itemOptions);\n  }\n\n  function handleDeleteItem(response, deletedItemId) {\n    let tempArray = [...parties];\n    tempArray[partyIndex].items.splice(itemIndex, 1)\n    setParties(tempArray);\n\n    let filteredItemOptions = chosenParty.items.map((item) => {\n        return (\n            <option key={item.id} value={item.name}>{item.name}</option>\n        )\n    });\n\n    setItemOptions(filteredItemOptions);\n  }\n\n  // NEW TO CHECK:\n  function handleAddLocation(newLocation) {\n    console.log(\"---------------------------------------------------------\");\n    console.log(\"handleAddLocation function called in parent App component\");\n    console.log(\"---------------------------------------------------------\");\n    // parties.map((party) => {\n    //   if (party.id == chosenParty.id) {\n    //     const updatedLocationArray = [...party.location, newLocation];\n\n    //     let locationOptions = updatedLocationArray.map((location) => {\n    //         return (\n    //             <option key={location.id} value={location.name}>{location.name}</option>\n    //         )\n    //     });\n\n    //     setLocationOptions(locationOptions);\n    //     let tempArray = [...parties];\n    //     tempArray[partyIndex].location.push(newLocation);\n    //     setParties(tempArray) ;\n    //   } \n    //   else {\n    //     console.log(\"Match not found within 'handleAddNewLocation!\");\n    //   }});\n  }\n\n  function handleChangeLocationInfo(chosenLocationId, chosenLocationIndex) {\n    console.log(\"---------------------------------------------------------\");\n    console.log(\"handleChangeLocation function called in parent App component\");\n    console.log(\"---------------------------------------------------------\");\n    // setLocationId(chosenLocationId);\n    // setLocationIndex(chosenLocationIndex);\n  }\n\n  function handleEditLocation(editedLocation) {\n    console.log(\"---------------------------------------------------------\");\n    console.log(\"handleEditLocation function called in parent App component\");\n    console.log(\"---------------------------------------------------------\");\n    // let tempArray = [...parties];\n    // tempArray[partyIndex].location[locationIndex] = editedLocation;\n    // setParties(tempArray);\n\n    // let locationOptions = chosenParty.location.map((location) => {\n    //   return (\n    //       <option key={location.id} value={location.name}>{location.name}</option>\n    //   )\n    // });\n\n    // setLocationOptions(locationOptions);\n  }\n\n  function handleDeleteLocation(response, deletedLocationId) {\n    console.log(\"---------------------------------------------------------\");\n    console.log(\"handleDeleteLocation function called in parent App component\");\n    console.log(\"---------------------------------------------------------\");\n    // let tempArray = [...parties];\n    // tempArray[partyIndex].location.splice(locationIndex, 1)\n    // setParties(tempArray);\n\n    // let filteredLocationOptions = chosenParty.location.map((location) => {\n    //     return (\n    //         <option key={location.id} value={location.name}>{location.name}</option>\n    //     )\n    // });\n\n    // setLocationOptions(filteredLocationOptions);\n  }\n\n  // Two resources used for 'Navigate' for '/' route for '/about' component:\n  // https://www.pluralsight.com/guides/how-to-set-react-router-default-route-redirect-to-home\n  // https://stackoverflow.com/questions/63690695/react-redirect-is-not-exported-from-react-router-dom\n\n  // Previous attempt to use 'useContext':\n      // <context.provider value={{ contextState, setContextState} }>\n      //   <NavBar user={user} setUser={setUser} />\n      // </context.provider>\n  return (\n    <>\n      <NavBar user={user} setUser={setUser} />\n      <Routes>\n        <Route \n          path=\"/\" \n          element={<About user={user}/>} \n        />\n        <Route \n          path=\"/parties\" \n          element={<Party \n            parties={parties} onFetchParties={handleFetchParties} onChooseParty={handleChooseParty} chosenParty={chosenParty}\n            onAddParty={handleAddParty} onEditParty={handleEditParty} onDeleteParty={handleDeleteParty} \n          />}\n        />\n        <Route \n          path=\"/items\" \n          element={<Item \n            parties={parties} onChooseParty={handleChooseParty} chosenParty={chosenParty} onFetchParties={handleFetchParties}\n            onAddItem={handleAddItem} itemOptions={itemOptions} setItemOptions={setItemOptions} itemId={itemId} setItemId={setItemId} onChangeItemInfo={handleChangeItemInfo}\n            onEditItem={handleEditItem} onDeleteItem={handleDeleteItem} \n          />}\n        />\n        <Route\n          path=\"/location\"\n          element={<Location \n            parties={parties} onFetchParties={handleFetchParties} onChooseParty={handleChooseParty} chosenParty={chosenParty}\n            onAddLocation={handleAddLocation} onEditLocation={handleEditLocation} onDeleteLocation={handleDeleteLocation}\n          />}\n        />\n        <Route \n          path=\"/summary\" \n          element={<Summary parties={parties} onFetchParties={handleFetchParties} />}\n        />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport {  BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n  }\n\n  body {\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}